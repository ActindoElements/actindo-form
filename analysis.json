{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<actindo-form>` is a wrapper around the HTML `<form>` element, that can\nvalidate and submit both custom and native HTML elements. Note that this\nis a breaking change from actindo-form 1.0, which was a type extension.\n\nIt has two modes: if `allow-redirect` is true, then after the form submission you\nwill be redirected to the server response. Otherwise, if it is false, it will\nuse an `iron-ajax` element to submit the form contents to the server.\n\n  Example:\n\n    <actindo-form id=\"actindo-form\">\n      <form method=\"get\" action=\"/form/handler\">\n        <input type=\"text\" name=\"name\" value=\"Batman\">\n        <input type=\"checkbox\" name=\"donuts\" checked> I like donuts<br>\n        <paper-checkbox name=\"cheese\" value=\"yes\" checked></paper-checkbox>\n      </form>\n    </actindo-form>\n\nBy default, a native `<button>` element will submit this form. However, if you\nwant to submit it from a custom element's click handler, you need to explicitly\ncall the `actindo-form`'s `submit` method.\n\n  Example:\n\n    <paper-button raised onclick=\"submitForm()\">Submit</paper-button>\n\n    function submitForm() {\n      document.getElementById('actindo-form').submit();\n    }\n\nIf you are not using the `allow-redirect` mode, then you also have the option of\ncustomizing the request sent to the server. To do so, you can listen to the `actindo-form-presubmit`\nevent, and modify the form's [`iron-ajax`](https://elements.polymer-project.org/elements/iron-ajax)\nobject. However, If you want to not use `iron-ajax` at all, you can cancel the\nevent and do your own custom submission:\n\n  Example of modifying the request, but still using the build-in form submission:\n\n    form.addEventListener('actindo-form-presubmit', function() {\n      this.request.method = 'put';\n      this.request.params['extraParam'] = 'someValue';\n    });\n\n  Example of bypassing the build-in form submission:\n\n    form.addEventListener('actindo-form-presubmit', function(event) {\n      event.preventDefault();\n      var firebase = new Firebase(form.getAttribute('action'));\n      firebase.set(form.serializeForm());\n    });\n\nNote that if you're dynamically creating this element, it's mandatory that you\nfirst create the contained `<form>` element and all its children, and only then\nattach it to the `<actindo-form>`:\n\n  var wrapper = document.createElement('actindo-form');\n  var form = document.createElement('form');\n  var input = document.createElement('input');\n  form.appendChild(input);\n  document.body.appendChild(wrapper);\n  wrapper.appendChild(form);",
      "summary": "",
      "path": "actindo-form.html",
      "properties": [
        {
          "name": "loadingLabel",
          "type": "string",
          "description": "Determines label during load",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 16
            },
            "end": {
              "line": 304,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"Loading data\""
        },
        {
          "name": "submittingLabel",
          "type": "string",
          "description": "Determines label during submit",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 16
            },
            "end": {
              "line": 312,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"Submitting data\""
        },
        {
          "name": "loadParams",
          "type": "Object",
          "description": "Parameters used when loading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 16
            },
            "end": {
              "line": 322,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "loadErrorMessage",
          "type": "string",
          "description": "Error message of the last failed load",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 16
            },
            "end": {
              "line": 329,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hasSubmitError",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 16
            },
            "end": {
              "line": 334,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "submitErrorMessage",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 16
            },
            "end": {
              "line": 338,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hasLoadingError",
          "type": "boolean",
          "description": "True if has error after loading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 16
            },
            "end": {
              "line": 347,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableSaveButton",
          "type": "boolean",
          "description": "Provides information if an existing save button should be disabled; binding this variable is up to the dev using the component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 16
            },
            "end": {
              "line": 356,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "allowRedirect",
          "type": "boolean",
          "description": "Set this to true if you don't want the form to be submitted through an\najax request, and you want the page to redirect to the action URL\nafter the form has been submitted.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 16
            },
            "end": {
              "line": 366,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "headers",
          "type": "Object",
          "description": "HTTP request headers to send. See PolymerElements/iron-ajax for\nmore details. Only works when `allowRedirect` is false.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 16
            },
            "end": {
              "line": 376,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "withCredentials",
          "type": "boolean",
          "description": "Set the `withCredentials` flag on the request. See PolymerElements/iron-ajax for\nmore details. Only works when `allowRedirect` is false.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 381,
              "column": 16
            },
            "end": {
              "line": 384,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "loadAction",
          "type": "string",
          "description": "Load action url",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 389,
              "column": 16
            },
            "end": {
              "line": 392,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "deferredFill",
          "type": "boolean",
          "description": "If set to true the form data is not filled immediately after successful load but when requested with function formCanBeFilled()\nif formCanBeFilled is called before data is loaded, form is filled immediately after load\nformCanBeFilled has to be called after each load request",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 16
            },
            "end": {
              "line": 402,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_canFill",
          "type": "boolean",
          "description": "Internal variable; determines if form can be filled\nOn changed deferred fill is done if data already loaded",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 16
            },
            "end": {
              "line": 411,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_canFillFormChanged\""
            }
          }
        },
        {
          "name": "inLoad",
          "type": "boolean",
          "description": "true if load is active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 16
            },
            "end": {
              "line": 420,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "inSubmit",
          "type": "boolean",
          "description": "true if submit is active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 425,
              "column": 16
            },
            "end": {
              "line": 429,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "showErrors",
          "type": "boolean",
          "description": "If an error occurs, show a paper-dialog with error & stack trace",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 16
            },
            "end": {
              "line": 437,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "formData",
          "type": "Object",
          "description": "last loaded form data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 16
            },
            "end": {
              "line": 448,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "clearValuesOnLoad",
          "type": "boolean",
          "description": "whether to reset all form element values to null before fill data when the form is loaded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 452,
              "column": 16
            },
            "end": {
              "line": 455,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "showCloseButtonOnLoadError",
          "type": "boolean",
          "description": "show/hidden cancel button on the error screen",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 459,
              "column": 16
            },
            "end": {
              "line": 462,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "hideRetryButton",
          "type": "boolean",
          "description": "show/hidden retry button on the error screen",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 16
            },
            "end": {
              "line": 469,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 533,
              "column": 12
            },
            "end": {
              "line": 547,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 549,
              "column": 12
            },
            "end": {
              "line": 554,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 556,
              "column": 12
            },
            "end": {
              "line": 578,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "formCanBeFilled",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 580,
              "column": 12
            },
            "end": {
              "line": 583,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_canFillFormChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 12
            },
            "end": {
              "line": 592,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ]
        },
        {
          "name": "_closeSubmitError",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 594,
              "column": 12
            },
            "end": {
              "line": 596,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_retryLoad",
          "description": "Retries load with previous params",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 601,
              "column": 12
            },
            "end": {
              "line": 603,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_disableSaveButton",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 12
            },
            "end": {
              "line": 608,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "inLoad"
            },
            {
              "name": "inSubmit"
            },
            {
              "name": "hasLoadingError"
            }
          ]
        },
        {
          "name": "validate",
          "description": "Validates all the required elements (custom and native) in the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 614,
              "column": 12
            },
            "end": {
              "line": 643,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "True if all the elements are valid."
          }
        },
        {
          "name": "_flattenFormData",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 646,
              "column": 12
            },
            "end": {
              "line": 679,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "object"
            },
            {
              "name": "currentName"
            },
            {
              "name": "flat"
            }
          ]
        },
        {
          "name": "submit",
          "description": "Submits the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 684,
              "column": 12
            },
            "end": {
              "line": 736,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "reset",
          "description": "Resets the form to the default values.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 741,
              "column": 12
            },
            "end": {
              "line": 763,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "serializeForm",
          "description": "Serializes the form as will be used in submission. Note that `serialize`\nis a Polymer reserved keyword, so calling `someIronForm`.serialize()`\nwill give you unexpected results.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 774,
              "column": 12
            },
            "end": {
              "line": 795,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clearInvalid",
              "type": "Boolean",
              "description": "if true all invalid submittable fields are set to valid"
            },
            {
              "name": "noRefresh",
              "type": "Boolean",
              "description": "if true we do not search again for form fields but take the ones from last enumeration"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "An object containing name-value pairs for elements that\n                 would be submitted."
          }
        },
        {
          "name": "_handleFormResponse",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 797,
              "column": 12
            },
            "end": {
              "line": 807,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_isShowFieldValidationMessages",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 809,
              "column": 12
            },
            "end": {
              "line": 814,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "resp = {}"
            }
          ]
        },
        {
          "name": "_handleFormError",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 816,
              "column": 12
            },
            "end": {
              "line": 910,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_makeAjaxRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 912,
              "column": 12
            },
            "end": {
              "line": 944,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "json"
            }
          ]
        },
        {
          "name": "_getValidatableElements",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 946,
              "column": 12
            },
            "end": {
              "line": 948,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getSubmittableElements",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 950,
              "column": 12
            },
            "end": {
              "line": 957,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noRefresh"
            }
          ]
        },
        {
          "name": "_getLoadableElements",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 959,
              "column": 12
            },
            "end": {
              "line": 961,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resetFormSearched",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 963,
              "column": 12
            },
            "end": {
              "line": 970,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_findElements",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 972,
              "column": 12
            },
            "end": {
              "line": 1052,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parent"
            },
            {
              "name": "ignoreName"
            },
            {
              "name": "ignoreDisabled"
            }
          ]
        },
        {
          "name": "_serializeElementValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1054,
              "column": 12
            },
            "end": {
              "line": 1090,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ]
        },
        {
          "name": "_serializeSelectValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1092,
              "column": 12
            },
            "end": {
              "line": 1102,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ]
        },
        {
          "name": "_serializeInputValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1104,
              "column": 12
            },
            "end": {
              "line": 1116,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ]
        },
        {
          "name": "_createHiddenElement",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1118,
              "column": 12
            },
            "end": {
              "line": 1124,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_addSerializedElement",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1126,
              "column": 12
            },
            "end": {
              "line": 1137,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "json"
            },
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "load",
          "description": "Loads the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1142,
              "column": 12
            },
            "end": {
              "line": 1187,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "json"
            }
          ]
        },
        {
          "name": "_fillForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1189,
              "column": 12
            },
            "end": {
              "line": 1262,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "resp"
            }
          ]
        },
        {
          "name": "_cancelLoad",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1264,
              "column": 12
            },
            "end": {
              "line": 1267,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_startStopSplashDots",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1268,
              "column": 12
            },
            "end": {
              "line": 1282,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "inLoad"
            },
            {
              "name": "inSubmit"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 293,
          "column": 16
        },
        "end": {
          "line": 1283,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "loading-label",
          "description": "Determines label during load",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 16
            },
            "end": {
              "line": 304,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "submitting-label",
          "description": "Determines label during submit",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 16
            },
            "end": {
              "line": 312,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "load-params",
          "description": "Parameters used when loading",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 16
            },
            "end": {
              "line": 322,
              "column": 17
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "load-error-message",
          "description": "Error message of the last failed load",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 16
            },
            "end": {
              "line": 329,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "has-submit-error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 16
            },
            "end": {
              "line": 334,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "submit-error-message",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 16
            },
            "end": {
              "line": 338,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "has-loading-error",
          "description": "True if has error after loading",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 16
            },
            "end": {
              "line": 347,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disable-save-button",
          "description": "Provides information if an existing save button should be disabled; binding this variable is up to the dev using the component",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 16
            },
            "end": {
              "line": 356,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "allow-redirect",
          "description": "Set this to true if you don't want the form to be submitted through an\najax request, and you want the page to redirect to the action URL\nafter the form has been submitted.",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 16
            },
            "end": {
              "line": 366,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "headers",
          "description": "HTTP request headers to send. See PolymerElements/iron-ajax for\nmore details. Only works when `allowRedirect` is false.",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 16
            },
            "end": {
              "line": 376,
              "column": 17
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "with-credentials",
          "description": "Set the `withCredentials` flag on the request. See PolymerElements/iron-ajax for\nmore details. Only works when `allowRedirect` is false.",
          "sourceRange": {
            "start": {
              "line": 381,
              "column": 16
            },
            "end": {
              "line": 384,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "load-action",
          "description": "Load action url",
          "sourceRange": {
            "start": {
              "line": 389,
              "column": 16
            },
            "end": {
              "line": 392,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "deferred-fill",
          "description": "If set to true the form data is not filled immediately after successful load but when requested with function formCanBeFilled()\nif formCanBeFilled is called before data is loaded, form is filled immediately after load\nformCanBeFilled has to be called after each load request",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 16
            },
            "end": {
              "line": 402,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "in-load",
          "description": "true if load is active",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 16
            },
            "end": {
              "line": 420,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "in-submit",
          "description": "true if submit is active",
          "sourceRange": {
            "start": {
              "line": 425,
              "column": 16
            },
            "end": {
              "line": 429,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "show-errors",
          "description": "If an error occurs, show a paper-dialog with error & stack trace",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 16
            },
            "end": {
              "line": 437,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "form-data",
          "description": "last loaded form data",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 16
            },
            "end": {
              "line": 448,
              "column": 17
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "clear-values-on-load",
          "description": "whether to reset all form element values to null before fill data when the form is loaded",
          "sourceRange": {
            "start": {
              "line": 452,
              "column": 16
            },
            "end": {
              "line": 455,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "show-close-button-on-load-error",
          "description": "show/hidden cancel button on the error screen",
          "sourceRange": {
            "start": {
              "line": 459,
              "column": 16
            },
            "end": {
              "line": 462,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hide-retry-button",
          "description": "show/hidden retry button on the error screen",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 16
            },
            "end": {
              "line": 469,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "actindo-form-error",
          "description": "actindo-form-error",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "actindo-form-invalid",
          "description": "actindo-form-invalid",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "actindo-form-load",
          "description": "actindo-form-load",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "actindo-form-load-response",
          "description": "actindo-form-load-response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "actindo-form-preload",
          "description": "actindo-form-preload",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "actindo-form-presubmit",
          "description": "actindo-form-presubmit",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "actindo-form-reset",
          "description": "actindo-form-reset",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "actindo-form-response",
          "description": "actindo-form-response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "actindo-form-submit",
          "description": "actindo-form-submit",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "has-loading-error-changed",
          "description": "Fired when the `hasLoadingError` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "disable-save-button-changed",
          "description": "Fired when the `disableSaveButton` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "in-load-changed",
          "description": "Fired when the `inLoad` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "in-submit-changed",
          "description": "Fired when the `inSubmit` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "form-data-changed",
          "description": "Fired when the `formData` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "actindo-form.html",
            "start": {
              "line": 285,
              "column": 12
            },
            "end": {
              "line": 285,
              "column": 25
            }
          }
        }
      ],
      "tagname": "actindo-form"
    },
    {
      "description": "",
      "summary": "",
      "path": "demo/simple-element.html",
      "properties": [],
      "methods": [
        {
          "name": "_onInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getValidity",
          "description": "attribute automatically, which should be used for styling.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 10
        },
        "end": {
          "line": 49,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "simple-element"
    }
  ]
}
